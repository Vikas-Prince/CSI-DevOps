trigger:
  - main

variables:
  imageName: 'node-api'
  acrName: 'csireactregistry'
  azureResourceGroup: 'rg-csi-global'
  containerInstanceName: 'csi-react-container-instance'

pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: BuildAndPush
    displayName: Build & Push Docker Image
    jobs:
      - job: Build
        steps:
          - task: Docker@2
            displayName: Build and Push Docker Image to ACR
            inputs:
              containerRegistry: 'csi-acr-connection'
              repository: '$(imageName)'
              command: 'buildAndPush'
              Dockerfile: '**/Dockerfile'
              tags: |
                latest

  - stage: DeployACI
    displayName: Deploy to Azure Container Instance
    dependsOn: BuildAndPush
    jobs:
      - job: Deploy
        steps:
          - task: AzureCLI@2
            displayName: Deploy to ACI
            inputs:
              azureSubscription: 'csi-dotnet-web-app'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                echo "Deleting existing container instance if it exists..."
                az container delete --name $(containerInstanceName) --resource-group $(azureResourceGroup) --yes || true

                echo "Creating new container instance..."
                az container create \
                  --resource-group $(azureResourceGroup) \
                  --name $(containerInstanceName) \
                  --image $(acrName).azurecr.io/$(imageName):latest \
                  --cpu 1 \
                  --memory 1 \
                  --registry-login-server $(acrName).azurecr.io \
                  --registry-username $(ACR_USERNAME) \
                  --registry-password $(ACR_PASSWORD) \
                  --dns-name-label aci-node-api-csi \
                  --ports 3000